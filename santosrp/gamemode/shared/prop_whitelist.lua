local Props = {
	["PHX Basic"] = {
		"models/props_phx/construct/metal_plate1.mdl",
		"models/props_phx/construct/metal_plate1_tri.mdl",
		"models/props_phx/construct/metal_plate1x2.mdl",
		"models/props_phx/construct/metal_plate1x2_tri.mdl",
		"models/props_phx/construct/metal_plate2x2.mdl",
		"models/props_phx/construct/metal_plate2x2_tri.mdl",
		"models/props_phx/construct/metal_plate2x4.mdl",
		"models/props_phx/construct/metal_plate2x4_tri.mdl",
		"models/props_phx/construct/metal_plate4x4.mdl",
		"models/props_phx/construct/metal_plate4x4_tri.mdl",
		"models/props_phx/construct/metal_tube.mdl",
		"models/props_phx/construct/metal_tubex2.mdl",
	},
	["PHX Blocks"] = {
		"models/hunter/blocks/cube025x025x025.mdl",
		"models/hunter/blocks/cube025x05x025.mdl",
		"models/hunter/blocks/cube025x075x025.mdl",
		"models/hunter/blocks/cube025x125x025.mdl",
		"models/hunter/blocks/cube025x150x025.mdl",
		"models/hunter/blocks/cube025x1x025.mdl",
		"models/hunter/blocks/cube025x2x025.mdl",
		"models/hunter/blocks/cube025x3x025.mdl",
		"models/hunter/blocks/cube025x4x025.mdl",
		"models/hunter/blocks/cube025x5x025.mdl",
		"models/hunter/blocks/cube025x6x025.mdl",
		"models/hunter/blocks/cube025x7x025.mdl",
		"models/hunter/blocks/cube025x8x025.mdl",
		"models/hunter/blocks/cube05x05x025.mdl",
		"models/hunter/blocks/cube05x05x05.mdl",
		"models/hunter/blocks/cube05x075x025.mdl",
		"models/hunter/blocks/cube05x105x05.mdl",
		"models/hunter/blocks/cube05x1x025.mdl",
		"models/hunter/blocks/cube05x1x05.mdl",
		"models/hunter/blocks/cube05x2x025.mdl",
		"models/hunter/blocks/cube05x2x05.mdl",
		"models/hunter/blocks/cube05x3x025.mdl",
		"models/hunter/blocks/cube05x3x05.mdl",
		"models/hunter/blocks/cube05x4x025.mdl",
		"models/hunter/blocks/cube05x4x05.mdl",
		"models/hunter/blocks/cube05x5x025.mdl",
		"models/hunter/blocks/cube05x5x05.mdl",
		"models/hunter/blocks/cube05x6x025.mdl",
		"models/hunter/blocks/cube05x6x05.mdl",
		"models/hunter/blocks/cube05x7x025.mdl",
		"models/hunter/blocks/cube05x7x05.mdl",
		"models/hunter/blocks/cube05x8x025.mdl",
		"models/hunter/blocks/cube05x8x05.mdl",
		"models/hunter/blocks/cube075x075x025.mdl",
		"models/hunter/blocks/cube075x075x075.mdl",
		"models/hunter/blocks/cube075x1x025.mdl",
		"models/hunter/blocks/cube075x1x075.mdl",
		"models/hunter/blocks/cube075x1x1.mdl",
		"models/hunter/blocks/cube075x2x025.mdl",
		"models/hunter/blocks/cube075x2x075.mdl",
		"models/hunter/blocks/cube075x2x1.mdl",
		"models/hunter/blocks/cube075x3x025.mdl",
		"models/hunter/blocks/cube075x3x075.mdl",
		"models/hunter/blocks/cube075x3x1.mdl",
		"models/hunter/blocks/cube075x4x025.mdl",
		"models/hunter/blocks/cube075x4x075.mdl",
		"models/hunter/blocks/cube075x5x075.mdl",
		"models/hunter/blocks/cube075x6x025.mdl",
		"models/hunter/blocks/cube075x6x075.mdl",
		"models/hunter/blocks/cube075x7x075.mdl",
		"models/hunter/blocks/cube075x8x025.mdl",
		"models/hunter/blocks/cube075x8x075.mdl",
		"models/hunter/blocks/cube125x125x025.mdl",
		"models/hunter/blocks/cube150x150x025.mdl",
		"models/hunter/blocks/cube1x150x1.mdl",
		"models/hunter/blocks/cube1x1x025.mdl",
		"models/hunter/blocks/cube1x1x05.mdl",
		"models/hunter/blocks/cube1x1x1.mdl",
		"models/hunter/blocks/cube1x2x025.mdl",
		"models/hunter/blocks/cube1x2x05.mdl",
		"models/hunter/blocks/cube1x2x1.mdl",
		"models/hunter/blocks/cube1x3x025.mdl",
		"models/hunter/blocks/cube1x3x1.mdl",
		"models/hunter/blocks/cube1x4x025.mdl",
		"models/hunter/blocks/cube1x4x05.mdl",
		"models/hunter/blocks/cube1x4x1.mdl",
		"models/hunter/blocks/cube1x5x025.mdl",
		"models/hunter/blocks/cube1x6x025.mdl",
		"models/hunter/blocks/cube1x6x05.mdl",
		"models/hunter/blocks/cube1x6x1.mdl",
		"models/hunter/blocks/cube1x7x025.mdl",
		"models/hunter/blocks/cube1x8x025.mdl",
		"models/hunter/blocks/cube1x8x05.mdl",
		"models/hunter/blocks/cube1x8x1.mdl",
		"models/hunter/blocks/cube2x1x1.mdl",
		"models/hunter/blocks/cube2x2x025.mdl",
		"models/hunter/blocks/cube2x2x05.mdl",
		"models/hunter/blocks/cube2x2x1.mdl",
		"models/hunter/blocks/cube2x2x2.mdl",
		"models/hunter/blocks/cube2x3x025.mdl",
		"models/hunter/blocks/cube2x4x025.mdl",
		"models/hunter/blocks/cube2x4x05.mdl",
		"models/hunter/blocks/cube2x4x1.mdl",
		"models/hunter/blocks/cube2x6x025.mdl",
		"models/hunter/blocks/cube2x6x05.mdl",
		"models/hunter/blocks/cube2x6x1.mdl",
		"models/hunter/blocks/cube2x8x025.mdl",
		"models/hunter/blocks/cube2x8x05.mdl",
		"models/hunter/blocks/cube2x8x1.mdl",
		"models/hunter/blocks/cube3x3x025.mdl",
		"models/hunter/blocks/cube3x3x05.mdl",
		"models/hunter/blocks/cube3x4x025.mdl",
		"models/hunter/blocks/cube3x6x025.mdl",
		"models/hunter/blocks/cube3x8x025.mdl",
		"models/hunter/blocks/cube4x4x025.mdl",
		"models/hunter/blocks/cube4x4x05.mdl",
		"models/hunter/blocks/cube4x4x1.mdl",
		"models/hunter/blocks/cube4x4x2.mdl",
		"models/hunter/blocks/cube4x4x4.mdl",
		"models/hunter/blocks/cube4x6x025.mdl",
		"models/hunter/blocks/cube4x6x05.mdl",
		"models/hunter/blocks/cube4x6x1.mdl",
		"models/hunter/blocks/cube4x6x2.mdl",
		"models/hunter/blocks/cube4x6x4.mdl",
		"models/hunter/blocks/cube4x6x6.mdl",
		"models/hunter/blocks/cube4x8x025.mdl",
		"models/hunter/blocks/cube4x8x05.mdl",
		"models/hunter/blocks/cube4x8x1.mdl",
	},
	["PHX Triangles"] = {
		"models/hunter/triangles/05x05x05.mdl",
		"models/hunter/triangles/1x05x05.mdl",
		"models/hunter/triangles/1x05x1.mdl",
		"models/hunter/triangles/1x1x1.mdl",
		"models/hunter/triangles/1x1x2.mdl",
		"models/hunter/triangles/1x1x3.mdl",
		"models/hunter/triangles/1x1x4.mdl",
		"models/hunter/triangles/1x1x5.mdl",
		"models/hunter/triangles/2x1x1.mdl",
		"models/hunter/triangles/2x2x2.mdl",
		"models/hunter/triangles/2x2x1.mdl",
		"models/hunter/triangles/2x2x2.mdl",
		"models/hunter/triangles/3x2x2.mdl",
		"models/hunter/triangles/3x3x2.mdl",
	},
	["PHX Reinforcment"] = {
		"models/mechanics/solid_steel/steel_beam45_3.mdl",
		"models/mechanics/solid_steel/steel_beam45_4.mdl",
		"models/mechanics/solid_steel/steel_beam45_8.mdl",
		"models/mechanics/solid_steel/steel_beam_4.mdl",
		"models/mechanics/solid_steel/steel_beam_8.mdl",
		"models/mechanics/solid_steel/plank_4.mdl",
		"models/mechanics/solid_steel/plank_8.mdl",
		"models/mechanics/solid_steel/i_beam2_4.mdl",
		"models/mechanics/solid_steel/i_beam2_8.mdl",
	},
	["PHX Misc"] = {
		"models/hunter/misc/lift2x2.mdl",
		"models/props_phx/misc/bunker01.mdl",
		"models/hunter/misc/stair1x1.mdl",
		"models/hunter/misc/stair1x1inside.mdl",
		"models/hunter/misc/stair1x1outside.mdl",
		"models/hunter/tubes/tube1x1x1.mdl",
		"models/hunter/tubes/tube1x1x1c.mdl",
		"models/hunter/tubes/tube1x1x2.mdl",
		"models/hunter/tubes/tube1x1x2c.mdl",
		"models/hunter/tubes/tube1x1x3.mdl",
		"models/hunter/tubes/tube1x1x3c.mdl",
		"models/hunter/tubes/tube1x1x4.mdl",
		"models/hunter/tubes/tube1x1x4c.mdl",
		"models/hunter/tubes/tube2x2x2.mdl",
		"models/hunter/tubes/tube2x2x2c.mdl",
		"models/hunter/tubes/tube2x2x4.mdl",
		"models/hunter/tubes/tube2x2x4c.mdl",
	},
	["Building"] = {
		"models/props_building_details/Storefront_Template001a_Bars.mdl",
		"models/props_c17/concrete_barrier001a.mdl",
		"models/props_c17/display_cooler01a.mdl",
		"models/props_c17/door01_left.mdl",
		"models/props_c17/door02_double.mdl",
		"models/props_c17/shelfunit01a.mdl",
		"models/props_c17/lockers001a.mdl",
		"models/props_doors/door03_slotted_left.mdl",
		"models/props_interiors/elevatorshaft_door01a.mdl",
		"models/props_interiors/furniture_shelf01a.mdl",
		"models/props_interiors/vendingmachinesoda01a.mdl",
		"models/props_interiors/vendingmachinesoda01a_door.mdl",
		"models/props_junk/trashdumpster01a.mdl",
		"models/props_junk/trashdumpster02.mdl",
		"models/props_junk/trashdumpster02b.mdl",
		"models/props_junk/wood_crate001a.mdl",
		"models/props_junk/wood_crate002a.mdl",
		"models/props_lab/blastdoor001a.mdl",
		"models/props_lab/blastdoor001b.mdl",
		"models/props_lab/blastdoor001c.mdl",
		"models/props_pipes/concrete_pipe001a.mdl",
		"models/props_trainstation/trainstation_clock001.mdl",
		"models/props_wasteland/cargo_container01b.mdl",
		"models/props_wasteland/controlroom_storagecloset001a.mdl",
		"models/props_wasteland/kitchen_counter001a.mdl",
		"models/props_wasteland/kitchen_counter001b.mdl",
		"models/props_wasteland/kitchen_counter001c.mdl",
		"models/props_wasteland/kitchen_counter001d.mdl",
		"models/props_wasteland/kitchen_fridge001a.mdl",
		"models/props_wasteland/kitchen_shelf001a.mdl",
		"models/props_wasteland/kitchen_shelf002a.mdl",
		"models/props/cs_assault/box_stack1.mdl",
		"models/props/cs_assault/box_stack2.mdl",
		"models/props/cs_assault/dryer_box.mdl",
		"models/props/cs_assault/moneypallet.mdl",
		"models/props/cs_assault/washer_box2.mdl",
		"models/props/cs_havana/bookcase_large.mdl",
		"models/props/cs_havana/bookcase_small.mdl",
		"models/props/cs_havana/gazebo.mdl",
		"models/props/cs_militia/crate_extralargemill.mdl",
		"models/props/cs_militia/crate_extrasmallmill.mdl",
		"models/props/cs_militia/shelves_wood.mdl",
		"models/props/cs_office/file_cabinet1_group.mdl",
		"models/props/de_dust/du_crate_64x64.mdl",
		"models/props/de_dust/du_crate_128x128.mdl",
		"models/props/de_dust/du_crate_64x64_stone.mdl",
		"models/props/de_dust/du_crate_64x80.mdl",
		"models/props/de_dust/du_crate_96x96.mdl",
		"models/props/de_nuke/crate_extralarge.mdl",
		"models/props/de_nuke/crate_extrasmall.mdl",
		"models/props/de_nuke/crate_large.mdl",
		"models/props/de_nuke/crate_small.mdl",
		"models/props/de_prodigy/prodcratesb.mdl",
		"models/props/de_train/lockers_long.mdl",
	},
	["Fence"] = {
		"models/props_building_details/courtyard_template001c_bars.mdl",
		"models/props_building_details/courtyard_template002c_bars.mdl",
		"models/props_c17/fence01a.mdl",
		"models/props_canal/canal_bars004.mdl",
		"models/props_wasteland/exterior_fence002a.mdl",
		"models/props_wasteland/exterior_fence002b.mdl",
		"models/props_wasteland/exterior_fence002c.mdl",
		"models/props_wasteland/exterior_fence002d.mdl",
		"models/props_wasteland/exterior_fence002e.mdl",
		"models/props_wasteland/exterior_fence003a.mdl",
		"models/props_wasteland/exterior_fence003b.mdl",
		"models/props_wasteland/interior_fence001a.mdl",
		"models/props_wasteland/interior_fence001b.mdl",
		"models/props_wasteland/interior_fence001c.mdl",
		"models/props_wasteland/interior_fence001d.mdl",
		"models/props_wasteland/interior_fence001e.mdl",
		"models/props_wasteland/interior_fence001g.mdl",
		"models/props_wasteland/interior_fence002a.mdl",
		"models/props_wasteland/interior_fence002b.mdl",
		"models/props_wasteland/interior_fence002c.mdl",
		"models/props_wasteland/interior_fence002d.mdl",
		"models/props_wasteland/interior_fence002e.mdl",
		"models/props_wasteland/interior_fence002f.mdl",
		"models/props_wasteland/interior_fence003a.mdl",
		"models/props_wasteland/interior_fence003b.mdl",
		"models/props_wasteland/interior_fence003d.mdl",
		"models/props_wasteland/interior_fence003e.mdl",
		"models/props_wasteland/interior_fence003f.mdl",
		"models/props_wasteland/prison_gate001a.mdl",
		"models/props_wasteland/prison_gate001b.mdl",
		"models/props_wasteland/prison_gate001c.mdl",
		"models/props_wasteland/prison_celldoor001a.mdl",
		"models/props_wasteland/prison_archwindow001.mdl",
		"models/props_wasteland/prison_slidingdoor001a.mdl",
	},
	["Furniture"] = {
		"models/props_c17/furniturecouch001a.mdl",
		"models/props_c17/bench01a.mdl",
		"models/props_c17/chair02a.mdl",
		"models/props_c17/furniturecouch002a.mdl",
		"models/props_c17/furnituretable001a.mdl",
		"models/props_c17/furnituretable002a.mdl",
		"models/props_c17/furnituretable003a.mdl",
		"models/props_combine/breenchair.mdl",
		"models/props_combine/breendesk.mdl",
		"models/props_interiors/furniture_chair01a.mdl",
		"models/props_interiors/furniture_chair03a.mdl",
		"models/props_interiors/furniture_couch01a.mdl",
		"models/props_interiors/furniture_couch02a.mdl",
		"models/props_interiors/furniture_desk01a.mdl",
		"models/props_trainstation/bench_indoor001a.mdl",
		"models/props_trainstation/benchoutdoor01a.mdl",
		"models/props_trainstation/traincar_seats001.mdl",
		"models/props_wasteland/cafeteria_bench001a.mdl",
		"models/props_wasteland/controlroom_chair001a.mdl",
		"models/props_wasteland/controlroom_desk001a.mdl",
		"models/props_wasteland/controlroom_desk001b.mdl",
		"models/props/cs_militia/table_kitchen.mdl",
		"models/props/cs_militia/table_shed.mdl",
		"models/props/cs_militia/television_console01.mdl",
		"models/props/cs_militia/tv_console.mdl",
		"models/props/cs_militia/wood_bench.mdl",
		"models/props/cs_militia/wood_table.mdl",
		"models/props/cs_office/bookshelf1.mdl",
		"models/props/cs_office/chair_office.mdl",
		"models/props/cs_office/shelves_metal.mdl",
		"models/props/cs_office/sofa.mdl",
		"models/props/cs_office/sofa_chair.mdl",
		"models/props/cs_office/table_coffee.mdl",
		"models/props/de_inferno/bench_concrete.mdl",
		"models/props/de_inferno/bench_wood.mdl",
		"models/props/de_inferno/tableantique.mdl",
		"models/props/de_inferno/tablecoffee.mdl",
	},
	["Misc."] = {
		"models/props_c17/furniturewashingmachine001a.mdl",
		"models/props_c17/furniturefridge001a.mdl",
		"models/props_interiors/bathtub01a.mdl",
		"models/props_junk/plasticcrate01a.mdl",
		"models/props_lab/bewaredog.mdl",
		"models/props_wasteland/kitchen_stove001a.mdl",
		"models/props_wasteland/kitchen_stove002a.mdl",
		"models/props_wasteland/laundry_cart001.mdl",
		"models/props_wasteland/laundry_cart002.mdl",
		"models/props_wasteland/laundry_dryer001.mdl",
		"models/props_wasteland/laundry_dryer002.mdl",
		"models/props_wasteland/laundry_washer001a.mdl",
		"models/props_wasteland/laundry_washer003.mdl",
		"models/props/de_tides/vending_turtle.mdl",
	}
}

local insert = table.insert

function FindModel(str)
	local dat = {}
	for k,v in pairs(Props) do
		for a,m in pairs(v) do
			if (m:find(str)) then
				insert(dat,m)
			end
		end
	end
	
	return dat
end

function GetModelCategoryList()
	local dat = {}
	
	for k,v in pairs(Props) do insert(dat,k) end
	
	return dat
end

function GeneratePropItems()

	for k,v in pairs( Props ) do
		for k2, M in pairs( v ) do
			local ITEM = santosRP.Items.new()
			ITEM:SetData( {
				Seller = 'santosrp_npc_propdealer',
				Price = 500, --insert price variation here, maybe by size
				Name = M,
				Model = M,
				Class = 'prop_physics' })
			ITEM:Register()
		end
	end

end

function GetModelCategory(cat)
	return Props[cat] or {}
end

function ModelExists(str)
	for k,v in pairs(Props) do
		for a,m in pairs(v) do
			if (m == str) then return true end
		end
	end
	
	return false
end